
/*
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array A = [1,1,1,2,2,3],

Your function should return length = 5, and A is now [1,1,2,2,3].
*/
class Solution {
public:
    int removeDuplicates(int A[], int n) {
        if(A==NULL||n<1) return 0;
        int index = 1;
        int count = 1; //当前这个数出现了几次
        const int endCondition = 2; //表示数组最多可以出现endCondition个相同的数
        for(int i=1;i<n;++i)
        {
            if(A[i]!=A[i-1]) //前后两个数不相等，直接复制过去
            {
                A[index++] = A[i];
                count = 1;
            }
            else if((A[i]==A[i-1])&&(count<endCondition))//前后两个数相等，只有当前只出现一次的时候，才复制过去,
            {
                A[index++] = A[i];
                count++;
            }
        }
        return index;
    }
};
